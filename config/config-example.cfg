################# Variables de la red ################
SIZE 8
#Variables para definir la cantidad de peer por red
N 8
M 16
#SIZE DB
D 6
#SIZE CACHE
C 4
#TTL
T 25
#Random walk
K 4

# Cantidad de ciclos que se deseen para la ejecuci�n de la simulaci�n
CYCLES 10
#CYCLE SIZE*100
CYCLE 100

# Delay existente en la transferencia del mensaje,
# el cual es un porcentaje relativo al tamaño
# del ciclo
MINDELAY 0
MAXDELAY 50

# Probabilidad de ca�da en el mensaje enviado
# DROP var�a entre 0 y 1
DROP 0

################ Par�metros de la red #############

# Semilla del valor Random
# Recordar que mientras no cambie la semilla, se generar� el mismo random
random.seed 1234526789

# Tama�o de la red
network.size SIZE

# Tipo de nodo a utilizar en la red
#Si ustedes crean un nuevo nodo deberan ingresarlo ac�
network.node cl.usach.sd.ExampleNode

# Frecuencia en que se realiza cada etapa
OBSERVER_STEP 2000
TRAFFIC_STEP 1000

# Tiempo de t�rmino en la simulaci�n
simulation.endtime CYCLE*CYCLES
simulation.logtime CYCLE

###########################################################
# Todos los componentes tienen la estructura de la        #
# siguiente forma:                                        #
# <protocol|init|control>.string_id [full_path_]classname #
# <protocol|init|control>.string_id.parameter_name        #
###########################################################

################### Protocolos #####################

# IdleProtocol: Es un paquete principal de Peersim,
# el cu�l incluye que cada nodo sea responsable por
# establecer la comunicaci�n con sus vecinos
protocol.0link peersim.core.IdleProtocol

protocol.1urt UniformRandomTransport
protocol.1urt.mindelay (CYCLE*MINDELAY)/100
protocol.1urt.maxdelay (CYCLE*MAXDELAY)/100

protocol.2tr UnreliableTransport
protocol.2tr.transport 1urt
protocol.2tr.drop DROP

protocol.3layer cl.usach.sd.Layer
protocol.3layer.linkable 0link
protocol.3layer.step CYCLE
protocol.3layer.transport 2tr

#size db
protocol.3layer.initD D
#size TTL
protocol.3layer.initT T
#size red
protocol.3layer.initR SIZE
#K random walk
protocol.3layer.initK K

################### Inicializaci�n ###################

# WireKOut: Toma un protocolo Linkable y a�ade K
# conexiones de manera random. La variable undir
# es para indicar que es direccionada la conexi�n
init.0rndlink WireKOut
init.0rndlink.k 0
init.0rndlink.undir false
init.0rndlink.protocol 0link

init.1statebuilder cl.usach.sd.Initialization
init.1statebuilder.protocol 3layer
init.1statebuilder.transport 2tr
init.1statebuilder.argExample 100
init.1statebuilder.initValue 1234

#size db
init.1statebuilder.initD D
#size cache
init.1statebuilder.initC C
#cantidad de peer por red
init.1statebuilder.initN N
init.1statebuilder.initM M
#size red
init.1statebuilder.initR SIZE

################### Control ######################

control.0traffic cl.usach.sd.TrafficGenerator
control.0traffic.protocol 3layer
control.0traffic.step TRAFFIC_STEP

control.1observer cl.usach.sd.Observer
control.1observer.protocol 3layer
control.1observer.step OBSERVER_STEP
control.1observer.initD D
control.1observer.initC C
control.1observer.initR SIZE
